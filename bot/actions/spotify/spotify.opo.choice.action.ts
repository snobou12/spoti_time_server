/** @format */

import { Markup } from "telegraf";
import { IBotContext } from "../../context/context.interface";
import { giveawaysLink, reviewsLink, supportLink } from "../../const/const";
import { IService } from "../../db/models/service.model";
import { resolve } from "path";
const source = resolve("./bot/assets/offers/one_plus_one.png");

const spotifyOpoChoiceAction = async (
	ctx: IBotContext,
	message_id: number | undefined,
	service: IService
) => {
	try {
		const months = service.months + "m";
		const userId = ctx.chat?.id;
		if (!userId) {
			await ctx.reply("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
			return;
		}

		const price = service.price;
		const caption = `–¢–∞—Ä–∏—Ñ: <b>${service.tariff} (–Ω–∞ 2 –∞–∫–∫–∞—É–Ω—Ç–∞)</b>\n–¶–µ–Ω–∞: <b>${price}—Ä</b>\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã c <b>–í–∞–º–∏</b> —Å—Ä–∞–∑—É —Å–≤—è–∂–µ—Ç—Å—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ - @SpotiTime_ru_support.`;

		await ctx.telegram.editMessageMedia(
			ctx.chat?.id,
			message_id,
			"",
			{
				media: { source },
				type: "photo",
				caption,
				parse_mode: "HTML",
			},
			{
				reply_markup: {
					inline_keyboard: [
						[
							Markup.button.callback(
								"–ö—É–ø–∏—Ç—å –ø–æ –∞–∫—Ü–∏–∏ 1Ô∏è‚É£ + 1Ô∏è‚É£",
								`data_buy_opo_spotify_${months}`
							),
						],
						[Markup.button.callback("‚óÄÔ∏è –ù–∞–∑–∞–¥", "data_back_to_opo_spotify")],
						[
							Markup.button.url("–û—Ç–∑—ã–≤—ã ‚≠ê", reviewsLink),
							// Markup.button.url("–†–æ–∑—ã–≥—Ä—ã—à–∏ üèÜ", giveawaysLink),
						],
						[Markup.button.url("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ ü§ñ", supportLink)],
					],
				},
			}
		);
	} catch (e) {
		console.log(e);
	}
};

export default spotifyOpoChoiceAction;
